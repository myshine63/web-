/* 1.let声明的变量只在它所在的代码块有效。var定义的变量没有块级作用域*/
{
  let a = 1;
}
// console.log(a);// 报错a没有定义

/* 2.let声明的变量不会提升，因此要先定义再使用*/
// console.log(b); // 报错，b没有定义
let b = 1;

/* 3.在代码块内，使用let命令声明变量的变量会屏蔽掉外部的变量，因此不可以在定义改变量之前使用该变量。这在语法上，称为“暂时性死区”*/
var c = 1;
{
  // console.log(c);// 会报错
  let c = 2 // 会屏蔽掉外面的c
}

/* 4.let不允许在相同作用域内，重复声明同一个变量*/
{
  var d = 0;
  // let d = 1;
  // let d = 2;
  // var d = 3;
  console.log(d);
}

/* 5.函数的()内的变量才默认采用的是let定义，函数作用域内可以用ver从新定义参数，但是不能用let重新定义参数*/

function f(e) {
  var e = 1;// 可以用var重新定义
  // let e = 1;//不能用let重新定义
  console.log(e);
}

f()

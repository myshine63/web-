syntax = "proto3";

option go_package="git.code.oa.com/trpcprotocol/mtt/groupfeedsmgr_server_groupfeeds_mgr";

package trpc.mtt.groupfeedsmgr_server;

import "tlive/live_program_read/live_program_read.proto";
import "trpc/common/validate.proto";

enum FeedsType {
   Feeds_TYPE_EMPTY = 0;  //
   Feeds_TYPE_PROGRAM = 1; // 直播动态
   Feeds_TYPE_GOODS_TO_SALE = 2;   //货架上新
   Feeds_TYPE_GRAPHIC_DETAILS = 3; //图文详情
}

// 错误码
enum ErrCode {
    ERR_OK              = 0;  //ok
    ERR_PARAM           = 1001;// 请求参数非法
	ERR_CACHE           = 1002;// 操作存储失败
	ERR_NETWORK         = 1003;// 访问下游服务超时
};

//================生成商品上新动态=================
message AddGoodsToSaleRequest {
   string anchor_id = 1;
   string title = 2;  // 动态的标题
   repeated string goodsIds = 3;   // 上新的商品id
   int32 valide = 4;  // 动态是否合法
   int32 hide = 5;    // 动态是否隐藏
}

message AddGoodsToSaleReply {
   string feeds_id = 2;  // 动态id
}

//================生成直播计划动态=================
message AddProgramRequest {
   string anchor_id = 1;
   string program_id = 2;   // 直播id
   uint32 create_time = 3;  // 直播计划创建时间
   uint32 status = 4;        // 直播状态
}

message AddProgramReply {
   string feeds_id = 2;  // 动态id
}

//================获取动态id=================
message GetFeedsRequest {
   string anchor_id = 1;
   int32 start_index = 2;   // 获取动态的起始位置
   int32 count = 3;   // 获取动态的数量
}

message  FeedsList {
   string feeds_id = 1;  // 该动态的类型
   FeedsType feedType = 2;  // 该动态的类型
   uint32  feeds_time = 3;  // 该动态的生成时间
}

message GetFeedsReply {
   repeated FeedsList  feeds_list = 2;  // 按时间排好序的数据
   bool is_end = 3; // 是否已经全部加载
}

//================批量获取直播动态=================
message GetProgramListRequest {
   string anchor_id = 1;
   repeated string feeds_ids = 2; // 获取直播计划动态id
}

message LiveGoodsList {
   string associated_id = 1;   //  直播id
   int64 total_goods_num = 2; //  相关商品的总量
   repeated GoodOnsale sales_goods = 3;        //  直播商品信息2条
}

message GetProgramListReply {
   map<string, trpc.tlive.live_program_read.ProgramBrief> anchor_programs = 2; // key是动态id，value是直播的内容
   map<string, LiveGoodsList> live_goods_list = 3;               // key是直播的pgroramid, 直播相关商品
   trpc.tlive.live_program_read.AnchorInfo anchor_info = 4;      // 主播信息
}

message GoodsList {
   string title = 1; // 动态标题
   repeated string goodsList = 2;  // 一条动态里的所有商品id
   uint32 create_time = 3;  // 动态的时间
}

//================批量获取商品上新动态=================
message GetGoodsToSaleListRequest {
   string anchor_id = 1;
   repeated string feeds_ids = 2; //动态id
}

message GetGoodsToSaleListReply {
   map<string, GoodsList> GoodsToSaleFeeds = 2; // key是动态id
}


//================删除动态=================
message DeleteFeedsRequest {
   string anchor_id = 1;//这里有风险，因此cgi来的请求只会校验包头的uid
   string feeds_id = 2; //动态id
   FeedsType type = 3;   // 删除的动态类型
}

message DeleteFeedsReply {
    int32  code     = 3;//返回码
    string ret_msg  = 4;//错误码不为0时返回错误提示
}

//================批量获取商品图片=================
message GetBatchGoodsImgRequest {
   string anchor_id = 1;
   repeated string goodsId = 2; // 商品id
}

message GetBatchGoodsImgReply {
   map<string, string> goodsImg = 2; // key 商品id， value 商品图片
}

//================删除直播计划=================
message DeleteProgramRequest {
   string anchor_id = 1;
   string program_id = 2; // 直播id
}

message DeleteProgramReply {
    int32  code     = 3;//返回码
    string ret_msg  = 4;//错误码不为0时返回错误提示
}

//==================修改直播状态===============
message ModProgramStatusRequest {
   string anchor_id = 1;
   string program_id = 2; // 直播id
   trpc.tlive.live_program_read.ProgramStatus status = 3;     // 直播状态，
   uint32 create_time = 4;  // 节目创建时间
}

message ModProgramStatusReply {

}

//==================删除动态中下架或者删除的商品===============
message DeleteGoodsRequest {
   string anchor_id = 1;
   repeated string  del_list = 2; //删除的商品ID列表
}

message DeleteGoodsReply {

}

//================主播插入一条图文动态=================
message AddGraphicDetailsRequest {
    string text = 1 [(validate.rules).string.min_len = 1];  //文字
    repeated string pic_url_list    = 2; //图片
    repeated string goods_id_list   = 3; //上新的商品id
    bool push_fans                  = 4; //true=推送粉丝提醒，false=不推
    uint64 anchor_id                = 5;//主播uid，用来判断是否为小助手发布动态

    //二期支持外链跳转
    uint32 sub_type                 = 11;//子类型，0=小程序动态，1=外链动态
    string title                    = 12;//标题
    string big_cover                = 13;//大封面
    repeated string small_cover     = 14;//小封面
    string wx_appid                 = 15;//小程序AppID
    string wx_jump_url              = 16;//小程序跳转地址
}

message AddGraphicDetailsReply {
    int32  code     = 1;//返回码
    string ret_msg  = 2;//错误码不为0时返回错误提示
}

//================获取主播动态详情=================
message GetAnchorFeedsListRequest {
    uint64 anchor_id    = 1[(validate.rules).uint64.gt = 0]; //主播uid
    int32 start         = 2; //获取动态的起始位置
    int32 count         = 3; //获取动态的数量,最大不能超过6个
}

//上新动态详情
message GoodsToSaleDetail {
    string title                        = 1;//动态标题
	repeated ShopGoodsInfo goods_list   = 2;//一条动态里的所有商品详情--首页拉取时只展示最前面3个
    uint32 create_time                  = 3;//上新时间
    repeated string goods_id_list       = 4;//所有商品id列表
}

//直播动态详情
message ProgramDetail {
    string associated_id            = 1;//直播id
    bool has_coupon                 = 2;//是否有优惠券活动
    bool has_redpkg                 = 3;//是否有红包活动
    uint64 popularity_num           = 4;//人气值
    GoodPoint introduce             = 5;//讲解中的商品信息
    trpc.tlive.live_program_read.ProgramBrief anchor_program    = 6;//直播内容
    trpc.tlive.live_program_read.AnchorInfo anchor_info         = 7;//主播信息
    uint64 create_time              = 8;//直播开始时间
}

//图文详情
message GraphicDetail {
    string text                         = 1;//文字
    repeated string pic_url_list        = 2;//图片
    uint64 anchor_id                    = 3;//主播uid
    repeated ShopGoodsInfo goods_list   = 4;//商品详情--首页拉取时只展示最前面3个
    repeated string goods_id_list       = 5;//所有商品id列表
    bool push_fans                      = 6;//true=推送粉丝提醒，false=不推
    uint32 status                       = 7;//审核状态，0=审核中，1=审核通过，2=审核未通过
    string not_pass_reason              = 8;//审核不通过时，表示不通过的原因
    uint64 create_time                  = 9;//创建时间
    uint64 update_time                  = 10;//更新时间

    //二期支持外链跳转
    uint32 sub_type                     = 11;//子类型，0=小程序动态，1=外链动态
    string title                        = 12;//标题
    string big_cover                    = 13;//大封面
    repeated string small_cover         = 14;//小封面
    string wx_appid                     = 15;//小程序AppID
    string wx_jump_url                  = 16;//小程序跳转地址
}

//动态详情
message FeedsDetail {
	string feeds_id         = 1;//该动态的类型
    FeedsType feedType      = 2;//该动态的类型
    uint32 feeds_time       = 3;//该动态的生成时间--拉首页列表排序用
    uint32 like_num         = 4;//点赞数
    bool i_like             = 5;//true=点赞了，flase=未点赞
    uint32 share_num        = 6;//分享了的人数

    ProgramDetail       program = 7;//直播动态详情 feedType=Feeds_TYPE_PROGRAM时出现
    GoodsToSaleDetail   sale    = 8;//上新动态详情 feedType=Feeds_TYPE_GOODS_TO_SALE时出现
    GraphicDetail       graphic = 9;//图文详情 feedType=Feeds_TYPE_GRAPHIC_DETAILS时出现
}

message GetAnchorFeedsListReply {
    int32  code                     = 1;//返回码
    string ret_msg                  = 2;//错误码不为0时返回错误提示

    FeedsDetail top                 = 3;//置顶的feeds，仅当start=0时出现
    repeated FeedsDetail feeds_list = 4;//按时间排好序的数据
    bool is_end                     = 5;//是否已经全部加载
}

//====================根据feedsID获取动态详情=====================
message GetFeedsDetailRequest {
    string feeds_id         = 1[(validate.rules).string.min_len = 1];//动态ID
    FeedsType feedType      = 2;//该动态的类型
    uint64 anchor_id        = 3[(validate.rules).uint64.gt = 0];//主播uid
}

message GetFeedsDetailReply {
    int32  code             = 1;//返回码
    string ret_msg          = 2;//错误码不为0时返回错误提示

    FeedsDetail detail      = 3;// feeds详情
    uint64 admin_expid      = 4;//小助手id
    string top_feeds_id     = 5;//当前已经置顶的feedsID，如果为空表示无置顶的feeds
}

//====================分页拉取feeds下所挂载的商品信息=====================
message GetGoodsDetailRequest {
    repeated string goods_id_list       = 1;//商品id列表，一次最多传10个
}

message GetGoodsDetailReply {
    int32  code                         = 1;//返回码
    string ret_msg                      = 2;//错误码不为0时返回错误提示
    repeated ShopGoodsInfo goods_list   = 3;//商品详情
}

//====================置顶和取消置顶feeds=====================
message FeedsTopRequest {
    string feeds_id         = 1;//动态ID
    FeedsType feedType      = 2;//该动态的类型
    uint32 action           = 3;//0=置顶，1=取消置顶
    uint64 anchor_id        = 4;//主播uid，用来判断是否为小助手操作动态
}

//在redis中存储主播置顶feeds信息
message AnchorTopFeedsInfo {
    string feeds_id         = 1;//动态ID
    FeedsType feedType      = 2;//该动态的类型
    uint64 ts               = 3;//置顶时间戳
    uint64 anchor_id        = 4;//主播uid
}

message FeedsTopReply {
    int32  code             = 1;//返回码
    string ret_msg          = 2;//错误码不为0时返回错误提示
}

//====================点赞和取消点赞feeds=====================
message LikeRequest {
    string feeds_id         = 1;//动态ID
    uint32 action           = 2;//0=点赞，1=取消点赞
}

message LikeReply {
    int32  code             = 1;//返回码
    string ret_msg          = 2;//错误码不为0时返回错误提示
}

//====================分享feeds=====================
message ShareRequest {
    string feeds_id         = 1;//动态ID
}

message ShareReply {
    int32  code             = 1;//返回码
    string ret_msg          = 2;//错误码不为0时返回错误提示
}

//====================查询本月还剩多少次推送粉丝通知的次数=====================
message GetPushFansTimesRequest {

}

message GetPushFansTimesReply {
    int32  code             = 1;//返回码
    string ret_msg          = 2;//错误码不为0时返回错误提示
    uint32 times            = 3;//剩余推送次数
    bool can_push           = 4;//false=不能push，true=可以push
}

//====================修改图文feeds状态=====================
message ModGraphicStatusRequest {
    string feeds_id         = 1;//动态ID
    uint32 status           = 2;//审核状态，0=审核中，1=审核通过，2=审核未通过
    string reason           = 3;//审核未通过的原因
}

message ModGraphicStatusReply {
    //错误码和错误信息放在trpc返回
}

//前端通过node.js调用
service groupfeedsMgr {
   // 生成商品上新动态
   rpc AddGoodsToSale (AddGoodsToSaleRequest) returns (AddGoodsToSaleReply) {}

   // 生成直播计划动态
   rpc AddProgram (AddProgramRequest) returns (AddProgramReply) {}

   // 获取动态id
   rpc GetFeeds (GetFeedsRequest) returns (GetFeedsReply) {}

   // 批量获取直播动态
   rpc GetProgramList (GetProgramListRequest) returns (GetProgramListReply) {}

   // 批量获取商品上新动态
   rpc GetGoodsToSaleList (GetGoodsToSaleListRequest) returns (GetGoodsToSaleListReply) {}

   // 删除动态
   rpc DeleteFeeds (DeleteFeedsRequest) returns (DeleteFeedsReply) {}

   // 批量获取商品图片
   rpc GetBatchGoodsImg (GetBatchGoodsImgRequest) returns (GetBatchGoodsImgReply) {}

   // 删除直播计划
   rpc DeleteProgram (DeleteProgramRequest) returns (DeleteProgramReply) {}

   // 修改直播状态，内部消息用于处理直播动态的排序，开播的直播排最前面，结束后恢复顺序
   rpc ModProgramStatus (ModProgramStatusRequest) returns (ModProgramStatusReply) {}

   // 删除动态中下架或者删除的商品，如果一条动态中所有的商品全部下线，这条动态也删除
   rpc DeleteGoods (DeleteGoodsRequest) returns (DeleteGoodsReply) {}
}

//前端通过cgi调用
service groupfeedsMgr_cgi {
    // 主播插入一条图文动态
    rpc AddGraphicDetails (AddGraphicDetailsRequest) returns (AddGraphicDetailsReply) {}

    // 获取主播动态详情
    rpc GetAnchorFeedsList (GetAnchorFeedsListRequest) returns (GetAnchorFeedsListReply) {}

    // 根据feedsID获取动态详情
    rpc GetFeedsDetail (GetFeedsDetailRequest) returns (GetFeedsDetailReply) {}

    // 拉取商品详情
    rpc GetGoodsDetail (GetGoodsDetailRequest) returns (GetGoodsDetailReply) {}

    // 置顶和取消置顶feeds
    rpc FeedsTop (FeedsTopRequest) returns (FeedsTopReply) {}

    // 点赞和取消点赞feeds
    rpc Like (LikeRequest) returns (LikeReply) {}

    // 分享feeds
    rpc Share (ShareRequest) returns (ShareReply) {}

    // 删除动态
    rpc DeleteFeeds (DeleteFeedsRequest) returns (DeleteFeedsReply) {}

    // 查询本月还剩多少次推送粉丝通知的次数
    rpc GetPushFansTimes (GetPushFansTimesRequest) returns (GetPushFansTimesReply) {}
}

//前端通过cgi调用-不需要登录态
service groupfeedsMgr_visitor_cgi {
    // 根据feedsID获取动态详情
    rpc GetFeedsDetail (GetFeedsDetailRequest) returns (GetFeedsDetailReply) {}

    // 拉取商品详情
    rpc GetGoodsDetail (GetGoodsDetailRequest) returns (GetGoodsDetailReply) {}
}

//后台调用
service groupfeedsMgr_svr {
    // 主播插入一条图文动态
    rpc AddGraphicDetails (AddGraphicDetailsRequest) returns (AddGraphicDetailsReply) {}

    // 获取主播动态详情
    rpc GetAnchorFeedsList (GetAnchorFeedsListRequest) returns (GetAnchorFeedsListReply) {}

    // 根据feedsID获取动态详情
    rpc GetFeedsDetail (GetFeedsDetailRequest) returns (GetFeedsDetailReply) {}

    // 拉取商品详情
    rpc GetGoodsDetail (GetGoodsDetailRequest) returns (GetGoodsDetailReply) {}

    // 置顶和取消置顶feeds
    rpc FeedsTop (FeedsTopRequest) returns (FeedsTopReply) {}

    // 点赞和取消点赞feeds
    rpc Like (LikeRequest) returns (LikeReply) {}

    // 分享feeds
    rpc Share (ShareRequest) returns (ShareReply) {}

    // 删除动态
    rpc DeleteFeeds (DeleteFeedsRequest) returns (DeleteFeedsReply) {}

    // 查询本月还剩多少次推送粉丝通知的次数
    rpc GetPushFansTimes (GetPushFansTimesRequest) returns (GetPushFansTimesReply) {}

    // 修改图文feeds状态，安平审核通过后会置为全部人可见
   rpc ModGraphicStatus (ModGraphicStatusRequest) returns (ModGraphicStatusReply) {}
}

////////////////////////////////////////////////////////////////////////////////
//商店商品展示数据
//数据的flag要跟GoodsData 和 ShopGoodsData中的一致
message ShopGoodsInfo {
    //商品共有数据 tlive_minishop_goods.GoodsData
    string id          = 1;
    string appid       = 2; // APPID，"JD":京东，"PDD":拼多多，"WD":微店
    int32  state       = 3; //状态
    string image       = 5; //商品图片
    double price       = 6; //价格
    double commission_share   = 7; //佣金比例
    int64 quantity     = 8; //商品库存
    string skuid       = 9; //外部编码
    int32 is_onsale    = 10; // 上下架 ： 1上架 0、2 下架
    int64 update_time  = 11; //更新时间
    int64 audit_state  = 12; //监管状态 0-未审核  1-审核通过 2-审核不通过
    string url         = 13; //外部链接
    int64 sales        = 14; //30天引单量
    string name        = 15; //商品名称
    int64 goods_create_time = 16;// 添加商品库时间
    double commission      = 17;//佣金
    double discount_price  = 18;//折扣价格
    string coupon_url      = 19; //优惠券链接
    string cid1_name       = 20; //一级分类
    string cid2_name       = 21; //二级分类
    string cid3_name       = 22; //三级分类
    Groupon groupon_info   = 23; //福利团信息
    string origin_image_url = 24; // 原始图片链接
    int64 is_fans_item = 25; // 1是分销商品
    EstimateCommission estimate_commission = 26; // 预估佣金

    //商品私有数据 ShopGoodsData
    string jump_url        = 100; //分享链接
    string shop_goods_id   = 102; //商店商品ID
    int64 create_time      = 104; //添加到商店的时间
    int32 exist            = 105; //是否已添加
    JoinedGrouponInfo joined_group = 106;//拼团信息
    int64 product_id       = 107; //电商中台商品ID
    string point           = 108; //视频打点
    GoodsIntroduce goods_introduce = 109; //商品讲解
    string ext             = 110; //扩展key
}

message Groupon{
    int64 detail_id = 1;//团购活动id
	int64 price=2; //参与团购的sku最低原价
    int64  groupon_price=3;//参与团购的sku最低活动价
    int64 limit_buy=4;   //限购件数
    int64 least_buy=5;   //最少购买件数
	int64 start_time=6;  // 活动开始时间
    int64 end_time=7;    // 活动结束时间
    int64 max_join=8;    //成团人数
    int64 groupon_type =9;     //1普通团 2新人团
}
message JoinedGrouponInfo{
    int64 groupon_id = 1;
    int32 status = 2;// 拼团状态 1未成团未满 2未成团已满 3已成团 4已解散
}

message EstimateCommission {
    string item_key = 1;//商品id
    int64 price = 2;//商品价格（分）
    string commission_rate = 3;//佣金比例
    int64 commission = 4;//预估佣金(分，此为商品价格乘以佣金比例得出的值 因为商品价格受营销活动影响 因此为预估佣金)
    string bonus_rate = 5;//奖励金比例
    int64 bonus = 6;//预估奖励金(分，计算规则同预估佣金)
}

//商品讲解具体字段
message GoodsIntroduce{
    string stream_hls = 1;//流地址
    string cover_url = 2; //封面地址
    string shop_goods_id = 3;//商店商品ID
    string video_id = 4; //片段id
}

message GoodOnsale {
	ShopGoodsInfo shop_good = 1; //橱窗商品
	uint32        sequence  = 2; //序号
	uint32        type      = 3; // 0 - 普通商品 1 - 推荐商品
}

message GoodPoint {
	int64 start_time = 1; // 开始时间戳
	int64 end_time = 2; // 结束时间戳
	string fragment_hls = 3; // 片段url[回传的时候需要填充]
	string shop_good_id = 4; // 商品ID
	string video_id = 5;// 视频ID
	string cover_url = 6;// 封面信息
	uint64 uid = 7;// 主播uid
}
